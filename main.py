#!venv/bin/python
import logging
import config
import requests
import random
import time
from aiogram import Bot, Dispatcher, executor, types
from bs4 import BeautifulSoup as BS
logging.basicConfig(level=logging.INFO)

bot = Bot(config.TOKEN)
dp = Dispatcher(bot)

#–ø–æ–≥–æ–¥–∞
r = requests.get('https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-—É–ª—å—è–Ω–æ–≤—Å–∫/')
html = BS(r.content, 'html.parser')
for el in html.select('#content'):
    t_min = el.select('.temperature .min')[0].text
    t_max = el.select('.temperature .max')[0].text
    text = el.select('.wDescription .description')[0].text
    #print(t_min + ', ' + t_max + '\n' + text)




# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=["start"])
async def cmd_start(message: types.Message):
    menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    menu_keyboard.add(types.KeyboardButton(text="–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ ‚õÖ"))
    menu_keyboard.add(types.KeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100 üé≤"))
    menu_keyboard.add(types.KeyboardButton(text="–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç ü§°"))
    menu_keyboard.add(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞"))
    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º!", reply_markup=menu_keyboard)

#
@dp.message_handler(commands=["help"])
async def welcome(message):
    start_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>{0.first_name}</strong>! \n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç <b>–†–æ—Ñ–ª–∞–Ω–ë–æ—Ç—è—Ä–∞</b> \n\n–ò –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å: \n‚Ä¢–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ ‚õÖ \n‚Ä¢–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100 üé≤ \n‚Ä¢–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç ü§°".format(message.from_user), parse_mode='html')
    await message.answer("–í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üòé")

@dp.message_handler(commands=["rofl"])
async def welcome(message):
    await message.answer("-–ó—Ä–∞–≤–¥—Å—Ç–≤—É–π—Ç–µ, —É –≤–∞—Å –µ—Å—Ç—å —Å–µ—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–≤? \n-–î–∞ \n-–ê —É–¥–æ—á–∫–∞? –ê–•–í–ê–ü–•–ê–ü–í–•–ê–ü–•–ê ü§°")
    await bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEBCTBfC2m8oAeECq6SF_U1KqL-r2LZcQAClgIAAvNWPxdOT4yU9UEszhoE')


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º ‚Äú–û—Ç–º–µ–Ω–∞‚Äù
@dp.message_handler(lambda message: message.text == "–û—Ç–º–µ–Ω–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.", reply_markup=remove_keyboard)

#
@dp.message_handler(content_types=['text'])
async def keyboard_answer(message: types.message):
    if message.chat.type == 'private':
        if message.text == '–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ ‚õÖ':
            await bot.send_message(message.chat.id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ –æ–±—Å—Ç–æ–∏—Ç —Ç–∞–∫:\n" + t_min + ', ' + t_max + '\n' + text)
        elif message.text == '–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100 üé≤':
            await bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç ü§°':
            anekdot = 'http://anecdotica.ru/'
            headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'}
            full_page = requests.get(anekdot, headers=headers)
            soup = BS(full_page.content, 'html.parser')
            convert = soup.findAll("div", {"class": "item_text"})[0].text
            await bot.send_message(message.chat.id, "ü§™ RoflanAnekdot ü§£\n\n" + convert)
        else:
            await bot.send_message(message.chat.id, "–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é ü§Ø\n\n–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π ü§ñ\n\n–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏ /help –∏–ª–∏ /start üë®‚Äçü¶Ωüè≥Ô∏è‚Äçüåà")



if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)